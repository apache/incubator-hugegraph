gremlin.graph=com.baidu.hugegraph.HugeFactory

backend=${backend}
serializer=${serializer}

store=hugegraph

vertex.tx_capacity=10000
edge.tx_capacity=10000

vertex.cache_expire=300
edge.cache_expire=300

vertex.check_customized_id_exist=true

query.batch_size=4
query.page_size=2

# cassandra backend config
cassandra.host=127.0.0.1
cassandra.port=9042
cassandra.username=
cassandra.password=
cassandra.connect_timeout=30
cassandra.read_timeout=120

# rocksdb backend config
rocksdb.data_path=rocksdb-data
rocksdb.wal_path=rocksdb-data
rocksdb.data_disks=[graph/secondary_index:rocksdb-index]

# hbase backend config
hbase.hosts=localhost
hbase.port=2181
hbase.znode_parent=/hbase

# mysql backend config
jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://127.0.0.1:3306
jdbc.username=root
jdbc.password=
jdbc.reconnect_max_times=3
jdbc.reconnect_interval=3
jdbc.sslmode=disable

# palo backend config
palo.host=localhost

snowflake.force_string=true
task.sync_deletion=true
expired.delete_batch=1

test.tinkerpop.filter=fast-methods.filter
