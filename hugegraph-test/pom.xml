<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>hugegraph</artifactId>
        <groupId>com.baidu.hugegraph</groupId>
        <version>0.11.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>hugegraph-test</artifactId>

    <properties>
        <skip.dump>true</skip.dump>
    </properties>

    <dependencies>
        <!-- Jacoco report-aggregate just statistics its directly dependent module,
             so must explicitly import each submodule -->
        <dependency>
            <groupId>com.baidu.hugegraph</groupId>
            <artifactId>hugegraph-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baidu.hugegraph</groupId>
            <artifactId>hugegraph-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baidu.hugegraph</groupId>
            <artifactId>hugegraph-cassandra</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baidu.hugegraph</groupId>
            <artifactId>hugegraph-scylladb</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baidu.hugegraph</groupId>
            <artifactId>hugegraph-rocksdb</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baidu.hugegraph</groupId>
            <artifactId>hugegraph-hbase</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baidu.hugegraph</groupId>
            <artifactId>hugegraph-mysql</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baidu.hugegraph</groupId>
            <artifactId>hugegraph-postgresql</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baidu.hugegraph</groupId>
            <artifactId>hugegraph-dist</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tinkerpop</groupId>
            <artifactId>gremlin-test</artifactId>
            <version>${tinkerpop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tinkerpop</groupId>
            <artifactId>gremlin-groovy-test</artifactId>
            <version>3.2.11</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20</version>
                <executions>
                    <execution>
                        <id>core-test</id>
                        <configuration>
                            <testSourceDirectory>${basedir}/src/main/java/
                            </testSourceDirectory>
                            <testClassesDirectory>${basedir}/target/classes/
                            </testClassesDirectory>
                            <includes>
                                <include>**/CoreTestSuite.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unit-test</id>
                        <configuration>
                            <testSourceDirectory>${basedir}/src/main/java/
                            </testSourceDirectory>
                            <testClassesDirectory>${basedir}/target/classes/
                            </testClassesDirectory>
                            <includes>
                                <include>**/UnitTestSuite.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>api-test</id>
                        <configuration>
                            <testSourceDirectory>${basedir}/src/main/java/
                            </testSourceDirectory>
                            <testClassesDirectory>${basedir}/target/classes/
                            </testClassesDirectory>
                            <includes>
                                <include>**/ApiTestSuite.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>tinkerpop-structure-test</id>
                        <configuration>
                            <testSourceDirectory>${basedir}/src/main/java/
                            </testSourceDirectory>
                            <testClassesDirectory>${basedir}/target/classes/
                            </testClassesDirectory>
                            <includes>
                                <include>**/StructureStandardTest.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>tinkerpop-process-test</id>
                        <configuration>
                            <!-- Tinkerpop process ReadTest.Traversals.class need write/read disk -->
                            <argLine>-Dbuild.dir=${project.build.directory}</argLine>
                            <testSourceDirectory>${basedir}/src/main/java/
                            </testSourceDirectory>
                            <testClassesDirectory>${basedir}/target/classes/
                            </testClassesDirectory>
                            <includes>
                                <include>**/ProcessStandardTest.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${top.level.dir}</directory>
                            <excludes>
                                <exclude>${final.name}/**</exclude>
                                <exclude>*.tar.gz</exclude>
                                <exclude>*.zip</exclude>
                                <exclude>*.tar</exclude>
                            </excludes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>${final.name}</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.4</version>
                <configuration>
                    <excludes>
                        <exclude>com/baidu/hugegraph/traversal/algorithm/*.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>pull-test-data</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>dump</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                            <address>${app.host}</address>
                            <port>${app.port}</port>
                            <reset>false</reset>
                            <skip>${skip.dump}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report-aggregate</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/../target/site/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources/</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>memory</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <backend>memory</backend>
                <serializer>text</serializer>
            </properties>
        </profile>
        <profile>
            <id>cassandra</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <backend>cassandra</backend>
                <serializer>cassandra</serializer>
            </properties>
        </profile>
        <profile>
            <id>scylladb</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <backend>scylladb</backend>
                <serializer>scylladb</serializer>
            </properties>
        </profile>
        <profile>
            <id>rocksdb</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <backend>rocksdb</backend>
                <serializer>binary</serializer>
            </properties>
        </profile>
        <profile>
            <id>mysql</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <backend>mysql</backend>
                <serializer>mysql</serializer>
            </properties>
        </profile>
        <profile>
            <id>palo</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <backend>palo</backend>
                <serializer>palo</serializer>
            </properties>
        </profile>
        <profile>
            <id>hbase</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <backend>hbase</backend>
                <serializer>hbase</serializer>
            </properties>
        </profile>
        <profile>
            <id>postgresql</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <backend>postgresql</backend>
                <serializer>postgresql</serializer>
            </properties>
        </profile>
    </profiles>
</project>
