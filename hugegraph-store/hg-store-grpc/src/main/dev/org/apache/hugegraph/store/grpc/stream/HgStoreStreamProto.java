/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: store_stream.proto

package org.apache.hugegraph.store.grpc.stream;

public final class HgStoreStreamProto {
  private HgStoreStreamProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KvStream_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KvStream_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022store_stream.proto\032\022store_common.proto" +
      "\032\027store_stream_meta.proto\"I\n\010KvStream\022\016\n" +
      "\006seq_no\030\001 \001(\005\022\014\n\004over\030\002 \001(\010\022\017\n\007version\030\004" +
      " \001(\r\022\016\n\006stream\030\005 \001(\0142\205\002\n\rHgStoreStream\022(" +
      "\n\004Scan\022\016.ScanStreamReq\032\n.KvPageRes\"\000(\0010\001" +
      "\022+\n\013ScanOneShot\022\016.ScanStreamReq\032\n.KvPage" +
      "Res\"\000\0222\n\tScanBatch\022\023.ScanStreamBatchReq\032" +
      "\n.KvPageRes\"\000(\0010\001\0222\n\nScanBatch2\022\023.ScanSt" +
      "reamBatchReq\032\t.KvStream\"\000(\0010\001\0225\n\020ScanBat" +
      "chOneShot\022\023.ScanStreamBatchReq\032\n.KvPageR" +
      "es\"\000B=\n%org.apache.hugegraph.store.grpc.s" +
      "treamB\022HgStoreStreamProtoP\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.hugegraph.store.grpc.common.HgStoreCommonProto.getDescriptor(),
          org.apache.hugegraph.store.grpc.stream.HgStoreStreamMetaProto.getDescriptor(),
        });
    internal_static_KvStream_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_KvStream_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KvStream_descriptor,
        new java.lang.String[] { "SeqNo", "Over", "Version", "Stream", });
    org.apache.hugegraph.store.grpc.common.HgStoreCommonProto.getDescriptor();
    org.apache.hugegraph.store.grpc.stream.HgStoreStreamMetaProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
