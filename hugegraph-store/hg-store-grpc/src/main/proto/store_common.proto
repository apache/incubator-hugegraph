/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.apache.hugegraph.store.grpc.common";
option java_outer_classname = "HgStoreCommonProto";

message Header {
  string graph = 1;
}
message Tkv {
  string table = 1;
  bytes key = 2;
  bytes value = 3;
  int32 code = 9;

}

message Tk {
  string table = 1;
  bytes key = 2;
  int32 code = 9;
}

message Tp {
  string table = 1;
  bytes prefix = 2;
  int32 code = 9;
}

message Tse {
  string table = 1;
  Key start = 2;
  Key end = 3;
}

message Key {
  bytes key = 1;
  int32 code = 9;
}

message Kv {
  bytes key = 1;
  bytes value = 2;
  int32 code = 9;
}

message ResStatus {
  ResCode code = 1;
  string msg = 2;
}

/*--- enum ---*/
enum ResCode {
  RES_CODE_OK = 0;
  RES_CODE_FAIL = 1;
  RES_CODE_NOT_EXIST = 2;
  RES_CODE_EXCESS = 3;
}

enum ScanMethod {
  UNKNOWN_SCAN_TYPE = 0;
  ALL = 1;
  PREFIX = 2;
  RANGE = 3;
}

enum ScanOrderType{
  // Under batch interface, the requirement for return order
  ORDER_NONE = 0;             // Allow unordered
  ORDER_WITHIN_VERTEX = 1;    // Edges within a vertex will not be broken, but the order between different vertices is unordered.
  ORDER_STRICT = 2;           // Ensure the original input point order
}

enum OpType {
  OP_TYPE_UNKNOWN = 0;
  OP_TYPE_PUT = 1;
  OP_TYPE_DEL = 2;
  OP_TYPE_DEL_SINGLE = 3;
  OP_TYPE_DEL_PREFIX = 4;
  OP_TYPE_DEL_RANGE = 5;
  OP_TYPE_MERGE = 6;
}

enum TableMethod{
  TABLE_METHOD_UNKNOWN = 0;
  TABLE_METHOD_EXISTS = 1;
  TABLE_METHOD_CREATE = 2;
  TABLE_METHOD_DELETE = 3;
  TABLE_METHOD_DROP = 4;
  TABLE_METHOD_TRUNCATE = 5;
}

enum GraphMethod{
  GRAPH_METHOD_UNKNOWN = 0;
  GRAPH_METHOD_DELETE = 3;
}
